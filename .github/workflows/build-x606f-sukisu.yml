name: Build Kernel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential bc bison flex libssl-dev \
          gcc-aarch64-linux-gnu \
          libncurses-dev \
          wget curl git cpio python3 gawk

    - name: Download kernel source
      run: |
        echo "Downloading kernel source from GitHub Release..."
        wget -q https://github.com/jmfu003-web/x606f-sukisu-builder/releases/download/v1.0/kernel.tgz -O kernel.tgz
        echo "Extracting..."
        tar -xvf kernel.tgz
        ls -l

    - name: Fix scripts/config missing issue
      run: |
        cd kernel
        if [ ! -f scripts/config ]; then
          echo "Fixing scripts/config..."
          make olddefconfig || true
        fi

    - name: Generate asm includes
      run: |
        cd kernel
        mkdir -p arch/arm64/include/generated/asm
        for h in mman msgbuf msi mutex poll preempt resource rwsem segment \
                 sembuf serial shmbuf simd sizes socket sockios swab switch_to \
                 termbits termios trace_clock types unaligned user vga xor; do
          echo "#include <asm-generic/$h.h>" > arch/arm64/include/generated/asm/$h.h
        done
        mkdir -p arch/arm64/include/generated/uapi/asm
        echo "#include <asm-generic/kvm_para.h>" > arch/arm64/include/generated/uapi/asm/kvm_para.h

    - name: Build kernel
      run: |
        cd kernel
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- x606f_sukisu_defconfig
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: kernel-build
        path: kernel/arch/arm64/boot/Image.gz
