name: Build X606F Kernel with SukiSU

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison flex build-essential libncurses5-dev libssl-dev \
            ccache curl wget zip unzip tar python3 gawk

      - name: Download kernel source from Release
        run: |
          echo "üì• Downloading kernel source..."
          curl -L -o kernel.tgz https://github.com/jmfu003-web/x606f-sukisu-builder/releases/download/v1.0/kernel.tgz
          ls -lh kernel.tgz

      - name: Extract kernel source
        run: |
          mkdir kernel
          if [[ -f kernel.tgz ]]; then
            echo "üì¶ Extracting TGZ..."
            tar -xvf kernel.tgz -C kernel --strip-components=1 || (echo "‚ö†Ô∏è Fallback: listing archive" && tar -tvf kernel.tgz)
          elif [[ -f kernel.zip ]]; then
            echo "üì¶ Extracting ZIP..."
            unzip kernel.zip -d kernel
          else
            echo "‚ùå ERROR: No kernel archive found"
            exit 1
          fi

      - name: Show extracted structure
        run: |
          echo "üìÇ Directory tree:"
          find kernel -maxdepth 4 -type d | sort

      - name: Detect kernel top directory (KDIR)
        run: |
          KDIR=$(find kernel -type d -path "*/arch/arm64/configs" | head -n 1 | sed 's|/arch/arm64/configs||')
          if [ -z "$KDIR" ]; then
            echo "‚ùå ERROR: arch/arm64/configs not found in extracted files"
            exit 1
          fi
          echo "‚úÖ Kernel top dir: $KDIR"
          echo "KDIR=$KDIR" >> $GITHUB_ENV

      - name: Detect defconfig
        run: |
          DEFCONFIG=$(find $KDIR/arch/arm64/configs -type f -name "*defconfig" | head -n 1 | xargs basename)
          if [ -z "$DEFCONFIG" ]; then
            echo "‚ùå ERROR: No defconfig found"
            exit 1
          fi
          echo "‚úÖ Using defconfig: $DEFCONFIG"
          echo "DEFCONFIG=$DEFCONFIG" >> $GITHUB_ENV

      - name: Build kernel
        run: |
          cd $KDIR
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          export PATH=/usr/bin:$PATH
          make $DEFCONFIG
          make -j$(nproc)

      - name: Package AnyKernel3
        run: |
          mkdir output
          cp $KDIR/arch/arm64/boot/Image.gz-dtb output/ || echo "‚ö†Ô∏è Image.gz-dtb not found"
          cp $KDIR/arch/arm64/boot/Image output/ || echo "‚ö†Ô∏è Image not found"
          ls -lh output

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: x606f-kernel
          path: output/
